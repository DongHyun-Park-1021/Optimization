#include <iostream>
#include <vector>
#include <functional>
#include <cstdlib>
#include <SDL.h>
#include <float.h>

#include "PAPC.h"
#include "PDHG.h"

using namespace std;

// f(x, y, z, w) = x^4 + y^4 + z^2 + w^2 - 0.5 * x^2 y^2 - 0.25 xz - 0.25 xw + 0.1 y^3 z - 0.3 y^3 w
double f(vector<double> x) {
    double ret = pow(x[0], 4) + pow(x[1], 4) + pow(x[2], 2) + pow(x[3], 2) - 0.5 * pow(x[0] * x[1], 2);
    ret -= (0.25 * x[0] * x[2] + 0.25 * x[0] * x[3] - 0.1 * pow(x[1], 3) * x[2] + 0.3 * pow(x[1], 3) * x[3]);
    return ret;
}

// g(x, y, z) = x^4 + y^4 + z^4 + sin(x) + 2sin(xy) + 4sin(xyz)
double g(vector<double> x) {
    double ret = pow(x[0], 4) + pow(x[1], 4) + pow(x[2], 4);
    ret += (sin(x[0]) + 2 * sin(x[0] * x[1]) + 4 * sin(x[0] * x[1] * x[2]));
    return ret;
}


int main() {
    int p = 4, q = 3;
    Func F = Func(f, p);
    Func G = Func(g, q);

    vector<vector<double>> a;
    a.push_back({1, 2, -1, -1});
    a.push_back({0, -1, 1, -3});
    a.push_back({-1, -2, -3, -1});

    Matrix A = Matrix(q, p, a);

    vector<double> x0 = {0, 0, 0, 0};
    vector<double> y0 = {0, 0, 0};

    PDHG pdhg = PDHG(F, G, A, p, q, 0.001, 0.001, 0.001, 0.00001, 1000000, 5000);
    pdhg.solve(x0, y0);

    PAPC papc = PAPC(F, G, A, p, q, 0.001, 0.001, 0.001, 0.00001, 1000000, 5000);
    papc.solve(x0, y0);
}
